openapi: 3.0.0
info:
  title: Emotions and Playlists API
  description: API for managing emotions and generating playlists
  version: 1.0.0
servers:
  - url: https://api.example.com

paths:
  /emotions:
    get:
      summary: Retrieve a list of all emotions
      operationId: getEmotions
      responses:
        '200':
          description: A list of emotions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string

  /emotions/{id}:
    get:
      summary: Retrieve a specific emotion by ID
      operationId: getEmotionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: An emotion
          content:
            application/json:
              schema:
                type: string

  /emotions/{emotion}:
    get:
      summary: Retrieve a specific emotion by name
      operationId: getEmotionByName
      parameters:
        - name: emotion
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An emotion ID
          content:
            application/json:
              schema:
                type: integer

  /emotions/{id}/opposite:
    get:
      summary: Retrieve the opposite emotion by ID
      operationId: getOppositeEmotionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The opposite emotion
          content:
            application/json:
              schema:
                type: string

  /emotions/{emotion}/opposite:
    get:
      summary: Retrieve the opposite emotion by name
      operationId: getOppositeEmotionByName
      parameters:
        - name: emotion
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The opposite emotion
          content:
            application/json:
              schema:
                type: string

  /playlists:
    get:
      summary: Retrieve all playlists of the current user
      operationId: getAllPlaylists
      responses:
        '200':
          description: A list of playlists
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
    post:
      summary: Create a new playlist on the user's Spotify account
      operationId: createPlaylist
      responses:
        '201':
          description: Playlist created successfully

  /playlists/{id}:
    get:
      summary: Retrieve a specific playlist by ID
      operationId: getPlaylistById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A playlist
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string

  /emotions/generate:
    post:
      summary: Generate an emotion based on a user-provided prompt
      operationId: generateEmotion
      parameters:
        - name: prompt
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Generated emotion
          content:
            application/json:
              schema:
                type: string

  /song-recommendations/{id}:
    get:
      summary: Generate song recommendations based on an emotion ID
      operationId: getSongRecommendationsById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of recommended songs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /song-recommendations/{emotion}:
    get:
      summary: Generate song recommendations based on an emotion name
      operationId: getSongRecommendationsByName
      parameters:
        - name: emotion
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of recommended songs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
